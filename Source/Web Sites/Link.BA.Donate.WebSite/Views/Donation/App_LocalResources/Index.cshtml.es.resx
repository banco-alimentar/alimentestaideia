<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="120Gramas" xml:space="preserve">
    <value>120 g</value>
  </data>
  <data name="1Litro" xml:space="preserve">
    <value>1 l</value>
  </data>
  <data name="1Quilograma" xml:space="preserve">
    <value>1 kg</value>
  </data>
  <data name="4Latas" xml:space="preserve">
    <value>4 latas</value>
  </data>
  <data name="6Litros" xml:space="preserve">
    <value>6 l</value>
  </data>
  <data name="AgoraTambemJaPodePagar" xml:space="preserve">
    <value>Ahora también ya puede usar su tarjeta de credito.</value>
  </data>
  <data name="AlimentosJaDoados" xml:space="preserve">
    <value>Alimentos ya donados:</value>
  </data>
  <data name="Atum" xml:space="preserve">
    <value>Atún</value>
  </data>
  <data name="Azeite" xml:space="preserve">
    <value>Aceite de oliva</value>
  </data>
  <data name="Açucar" xml:space="preserve">
    <value>Arroz</value>
  </data>
  <data name="CampanhaCriadaPor" xml:space="preserve">
    <value>Campaña creada por</value>
  </data>
  <data name="CasoTenhaNifInternacional" xml:space="preserve">
    <value>Si tiene un NIF internacional o no desea recibir un recibo de donativo rellene el NIF con 000000000 (nueve zeros).</value>
  </data>
  <data name="CodigoPostal" xml:space="preserve">
    <value>C. Postal</value>
  </data>
  <data name="ComunidadeQueDoouBens" xml:space="preserve">
    <value>Comunidad que ha donado bienes:</value>
  </data>
  <data name="CondicoesGeraisEDePrivacidade" xml:space="preserve">
    <value>condiciones generales y de privacidad</value>
  </data>
  <data name="ContacteNos" xml:space="preserve">
    <value>Contacte-nos</value>
  </data>
  <data name="DescricaoDoCabaz" xml:space="preserve">
    <value>Contenido de la canasta</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmParceriaCom" xml:space="preserve">
    <value>con</value>
  </data>
  <data name="Empresa" xml:space="preserve">
    <value>Empresa</value>
  </data>
  <data name="Entidade" xml:space="preserve">
    <value>entidad</value>
  </data>
  <data name="EscolhaOBancoAlimentarParaOQualQuerDoar" xml:space="preserve">
    <value>Seleccione el Banco para dónde quiere usted donar</value>
  </data>
  <data name="EscolhaOsBensQueQuerDoar" xml:space="preserve">
    <value>Seleccione los bienes que quiere usted donar...</value>
  </data>
  <data name="EstesDadosSaoNecessariosAEmissaoEEnvioDeRecibo" xml:space="preserve">
    <value>Estos datos son necesarios para la emisión y envío del recibo:</value>
  </data>
  <data name="FacaASuaDoacao1" xml:space="preserve">
    <value>Haga su donativo y</value>
  </data>
  <data name="FacaASuaDoacao2" xml:space="preserve">
    <value>ayude quién más necesita!</value>
  </data>
  <data name="FormaDePagamento" xml:space="preserve">
    <value>Forma de pago</value>
  </data>
  <data name="Foto" xml:space="preserve">
    <value>Foto</value>
  </data>
  <data name="Leite" xml:space="preserve">
    <value>Leche</value>
  </data>
  <data name="LiEAceitoAs" xml:space="preserve">
    <value>He leido y acepto las</value>
  </data>
  <data name="LogoQueConfirmemosOPagamento1" xml:space="preserve">
    <value>Luego que confirmemos el pago</value>
  </data>
  <data name="LogoQueConfirmemosOPagamento2" xml:space="preserve">
    <value>actualizaremos el portal y enviaremos para su</value>
  </data>
  <data name="LogoQueConfirmemosOPagamento3" xml:space="preserve">
    <value>dirección de correo electrónico.</value>
  </data>
  <data name="Morada" xml:space="preserve">
    <value>Domicilio</value>
  </data>
  <data name="Nif" xml:space="preserve">
    <value>NIF</value>
  </data>
  <data name="Nome" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="OPagamentoPodeSerFeito" xml:space="preserve">
    <value>El pago de su donativo podrá ser hecho utilizando la referencia para cajero citada antes, de forma totalmente segura, utilizando su banco online o cualquier cajero cerca de usted - la referencia arriba há sido igualmente enviada para su email.</value>
  </data>
  <data name="OuOCabaz" xml:space="preserve">
    <value>… o canasta</value>
  </data>
  <data name="PagamentoPorCartaoDeCredito" xml:space="preserve">
    <value>Pago com Tarjeta de Credito</value>
  </data>
  <data name="PagamentoPorReferenciaMultibanco" xml:space="preserve">
    <value>Pago por referencia en el cajero</value>
  </data>
  <data name="Pais" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="ParaOBancoAlimentarContraAFome" xml:space="preserve">
    <value>para el Banco Alimentar contra el Hambre</value>
  </data>
  <data name="Particular" xml:space="preserve">
    <value>Particular</value>
  </data>
  <data name="PoliticaDePrivacidade" xml:space="preserve">
    <value>Política de privacidade</value>
  </data>
  <data name="PoliticaDePrivacidade1" xml:space="preserve">
    <value>Entiendo que mi privacidad es muy importante para el Banco Alimentar y que el Banco Alimentar me está informando sobre su política de protección de datos y privacidad, y solicita mi consentimiento para almazenar y tratar los datos a</value>
  </data>
  <data name="PoliticaDePrivacidade2" xml:space="preserve">
    <value>En caso de optar por cargar/upload una fotografia suya o el logotipo de su empresa entienda que la misma será publicada online, quedando visible a cualquier visitante a nuestro website.</value>
  </data>
  <data name="PoliticaDePrivacidade3" xml:space="preserve">
    <value>Entiendo que mi información personal no será ni vendida ni transmitida a terceros.</value>
  </data>
  <data name="PoliticaDePrivacidade4" xml:space="preserve">
    <value>Podré ejercer el derecho de acceso, retificación y eliminación de la información disponibilizada, en los terminos de la legislación en vigor, dirigiéndome al Banco Alimentar a través de:</value>
  </data>
  <data name="PreenchaOsSeusDados" xml:space="preserve">
    <value>Introduzca sus datos:</value>
  </data>
  <data name="Referencia" xml:space="preserve">
    <value>ref.</value>
  </data>
  <data name="Salsichas" xml:space="preserve">
    <value>Salchichas</value>
  </data>
  <data name="TodosOsPrecosIncluemIva" xml:space="preserve">
    <value>Todos os preços incluem IVA</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Valor" xml:space="preserve">
    <value>valor</value>
  </data>
  <data name="VerCabaz" xml:space="preserve">
    <value>ver canasta</value>
  </data>
  <data name="Óleo" xml:space="preserve">
    <value>Aceite vegetal</value>
  </data>
  <data name="ComOApoio" xml:space="preserve">
    <value>Con el apoyo:</value>
  </data>
  <data name="EmailBancoAlimentar" xml:space="preserve">
    <value>email</value>
  </data>
  <data name="EscrevaAPalavraAcima" xml:space="preserve">
    <value>Escriba la palavra arriba</value>
  </data>
  <data name="FederacaoPortuguesa" xml:space="preserve">
    <value>Federación Portuguesas de los Bancos de Alimentos Contra el Hambre - Estação CP Alcântara Terra, Arz 1 Av de Ceuta 1300-125 Lisboa NIPC 504335642</value>
  </data>
  <data name="MoradaBancoAlimentar" xml:space="preserve">
    <value>dirección</value>
  </data>
  <data name="BotaoDoar" xml:space="preserve">
    <value>"~/Content/images/b_doar.esp.png"</value>
  </data>
  <data name="BotaoEnviar" xml:space="preserve">
    <value>"~/Content/images/b_enviar.esp.png"</value>
  </data>
  <data name="BotaoPagar" xml:space="preserve">
    <value>"~/Content/images/b_pagar.esp.png"</value>
  </data>
  <data name="ImagensDeFundo" xml:space="preserve">
    <value>"~/Content/banco.es.css"</value>
  </data>
  <data name="Saco" xml:space="preserve">
    <value>"~/Content/images/saco.esp.png"</value>
  </data>
  <data name="TituloHeader" xml:space="preserve">
    <value>"~/Content/images/titulo_header.esp.png"</value>
  </data>
  <data name="Intro" xml:space="preserve">
    <value>Intro</value>
  </data>
  <data name="TextoIntro" xml:space="preserve">
    <value>El Banco Alimentar tiene como misión luchar contra el desperdício, recuperando los excedentes alimentares para distribuir por quién más los necesita. Existen actualmente20 Bancos Alimentares en Portugal (continente e islas) que apoyan 2.218 instituciones de solidariedad. Estes excedentes contribuen para la alimentación de personas comprobadamente carenciadas, son  alimentos previamente confeccionados así como canastas de alimentos, totalizando su distribución para un total de 398.233 personas.</value>
  </data>
  <data name="VejaOFilme" xml:space="preserve">
    <value>VER PELÍCULA</value>
  </data>
</root>