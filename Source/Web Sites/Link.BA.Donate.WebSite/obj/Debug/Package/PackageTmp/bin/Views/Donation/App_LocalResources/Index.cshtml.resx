<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="120Gramas" xml:space="preserve">
    <value>120 g</value>
  </data>
  <data name="1Litro" xml:space="preserve">
    <value>1 l</value>
  </data>
  <data name="1Quilograma" xml:space="preserve">
    <value>1 kg</value>
  </data>
  <data name="4Latas" xml:space="preserve">
    <value>4 latas</value>
  </data>
  <data name="6Litros" xml:space="preserve">
    <value>6 l</value>
  </data>
  <data name="AgoraTambemJaPodePagar" xml:space="preserve">
    <value>Agora também já pode  pagar usando o seu cartão de crédito.</value>
  </data>
  <data name="AlimentosJaDoados" xml:space="preserve">
    <value>Alimentos já doados:</value>
  </data>
  <data name="Atum" xml:space="preserve">
    <value>Atum</value>
  </data>
  <data name="Azeite" xml:space="preserve">
    <value>Azeite</value>
  </data>
  <data name="Açucar" xml:space="preserve">
    <value>Açúcar</value>
  </data>
  <data name="CampanhaCriadaPor" xml:space="preserve">
    <value>Campanha criada por</value>
  </data>
  <data name="CasoTenhaNifInternacional" xml:space="preserve">
    <value>Caso tenha NIF internacional ou não pretenda receber recibo por favor preencha o NIF com 000000000 (nove zeros).</value>
  </data>
  <data name="CodigoPostal" xml:space="preserve">
    <value>C. Postal</value>
  </data>
  <data name="ComunidadeQueDoouBens" xml:space="preserve">
    <value>Comunidade que doou bens:</value>
  </data>
  <data name="CondicoesGeraisEDePrivacidade" xml:space="preserve">
    <value>condições gerais e de privacidade</value>
  </data>
  <data name="ContacteNos" xml:space="preserve">
    <value>Contacte-nos</value>
  </data>
  <data name="DescricaoDoCabaz" xml:space="preserve">
    <value>Descrição do cabaz</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmParceriaCom" xml:space="preserve">
    <value>em parceria com</value>
  </data>
  <data name="Empresa" xml:space="preserve">
    <value>Empresa</value>
  </data>
  <data name="Entidade" xml:space="preserve">
    <value>entid.</value>
  </data>
  <data name="EscolhaOBancoAlimentarParaOQualQuerDoar" xml:space="preserve">
    <value>Escolha o Banco Alimentar para o qual quer doar</value>
  </data>
  <data name="EscolhaOsBensQueQuerDoar" xml:space="preserve">
    <value>Escolha os bens que quer doar...</value>
  </data>
  <data name="EstesDadosSaoNecessariosAEmissaoEEnvioDeRecibo" xml:space="preserve">
    <value>Estes dados são necessarios à emissão e envio de recibo:</value>
  </data>
  <data name="FacaASuaDoacao1" xml:space="preserve">
    <value>Faça a sua doação e</value>
  </data>
  <data name="FacaASuaDoacao2" xml:space="preserve">
    <value>ajude quem mais precisa!</value>
  </data>
  <data name="FormaDePagamento" xml:space="preserve">
    <value>Forma de Pagamento</value>
  </data>
  <data name="Foto" xml:space="preserve">
    <value>Foto</value>
  </data>
  <data name="Leite" xml:space="preserve">
    <value>Leite</value>
  </data>
  <data name="LiEAceitoAs" xml:space="preserve">
    <value>Li e aceito as</value>
  </data>
  <data name="LogoQueConfirmemosOPagamento1" xml:space="preserve">
    <value>Logo que confirmemos o pagamento</value>
  </data>
  <data name="LogoQueConfirmemosOPagamento2" xml:space="preserve">
    <value>actualizaremos o portal e enviaremos para o seu</value>
  </data>
  <data name="LogoQueConfirmemosOPagamento3" xml:space="preserve">
    <value>email o recibo da doação.</value>
  </data>
  <data name="Morada" xml:space="preserve">
    <value>Morada</value>
  </data>
  <data name="Nif" xml:space="preserve">
    <value>NIF</value>
  </data>
  <data name="Nome" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="OPagamentoPodeSerFeito" xml:space="preserve">
    <value>O pagamento da sua doação pode ser feito usando a referência multibanco acima, de forma totalmente segura, usando o seu banco online ou qualquer caixa multibanco perto de si - a referência acima foi também enviada para o seu email.</value>
  </data>
  <data name="OuOCabaz" xml:space="preserve">
    <value>... ou o cabaz</value>
  </data>
  <data name="PagamentoPorCartaoDeCredito" xml:space="preserve">
    <value>Pagamento por Cartão de Crédito</value>
  </data>
  <data name="PagamentoPorReferenciaMultibanco" xml:space="preserve">
    <value>Pagamento por Referência Multibanco</value>
  </data>
  <data name="Pais" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="ParaOBancoAlimentarContraAFome" xml:space="preserve">
    <value>para o Banco Alimentar contra a Fome</value>
  </data>
  <data name="Particular" xml:space="preserve">
    <value>Particular</value>
  </data>
  <data name="PoliticaDePrivacidade" xml:space="preserve">
    <value>Política de privacidade</value>
  </data>
  <data name="PoliticaDePrivacidade1" xml:space="preserve">
    <value>Entendo que a minha privacidade é muito importante para o Banco Alimentar e que o Banco Alimentar me está a informar sobre a sua política de protecção de dados e privacidade, e solicita o meu consentimento para armazenamento e tratamento dos dados agora fornecidos com o intuito de processar a sua doação.</value>
  </data>
  <data name="PoliticaDePrivacidade2" xml:space="preserve">
    <value>Caso opte por realizar o carregamento/upload de uma fotografia sua ou do logótipo da sua empresa compreende que a mesma será publicada online, ficando visível a quaisquer visitantes do nosso website.</value>
  </data>
  <data name="PoliticaDePrivacidade3" xml:space="preserve">
    <value>Entendo que a minha informação pessoal não será vendida ou transmitida a terceiros.</value>
  </data>
  <data name="PoliticaDePrivacidade4" xml:space="preserve">
    <value>Poderei exercer o direito de acesso, rectificação e eliminação da informação disponibilizada, nos termos da legislação em vigor, dirigindo-me ao Banco Alimentar através:</value>
  </data>
  <data name="PreenchaOsSeusDados" xml:space="preserve">
    <value>Preencha os seus dados:</value>
  </data>
  <data name="Referencia" xml:space="preserve">
    <value>refer.</value>
  </data>
  <data name="Salsichas" xml:space="preserve">
    <value>Salsichas</value>
  </data>
  <data name="TodosOsPrecosIncluemIva" xml:space="preserve">
    <value>Todos os preços incluem IVA</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Valor" xml:space="preserve">
    <value>valor</value>
  </data>
  <data name="VerCabaz" xml:space="preserve">
    <value>ver cabaz</value>
  </data>
  <data name="Óleo" xml:space="preserve">
    <value>Óleo</value>
  </data>
  <data name="ComOApoio" xml:space="preserve">
    <value>Com o apoio:</value>
  </data>
  <data name="EmailBancoAlimentar" xml:space="preserve">
    <value>email</value>
  </data>
  <data name="EscrevaAPalavraAcima" xml:space="preserve">
    <value>Escreva a palavra acima</value>
  </data>
  <data name="FederacaoPortuguesa" xml:space="preserve">
    <value>Federação Portuguesa dos Bancos Alimentares Contra a FomeEstação CP Alcântara Terra, Arz 1 • Av. de Ceuta • 1300-125 Lisboa NIPC 504335642</value>
  </data>
  <data name="MoradaBancoAlimentar" xml:space="preserve">
    <value>morada</value>
  </data>
  <data name="BotaoDoar" xml:space="preserve">
    <value>"~/Content/images/b_doar.png"</value>
  </data>
  <data name="BotaoEnviar" xml:space="preserve">
    <value>"~/Content/images/b_enviar.png"</value>
  </data>
  <data name="BotaoPagar" xml:space="preserve">
    <value>"~/Content/images/b_pagar.png"</value>
  </data>
  <data name="ImagensDeFundo" xml:space="preserve">
    <value>"~/Content/banco.pt.css"</value>
  </data>
  <data name="Saco" xml:space="preserve">
    <value>"~/Content/images/saco.png"</value>
  </data>
  <data name="TituloHeader" xml:space="preserve">
    <value>"~/Content/images/titulo_header.png"</value>
  </data>
  <data name="VejaOFilme" xml:space="preserve">
    <value>VEJA O FILME</value>
  </data>
</root>